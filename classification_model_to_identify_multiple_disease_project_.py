# -*- coding: utf-8 -*-
"""Classification Model to Identify Multiple Disease Project .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tIMf1Vv8k3beubZuzcL27LhWRGUOvQxA

## Classification Model to Identify Multiple Disease Project
"""

# import library
import pandas as pd
import seaborn as sb
import numpy as np
import matplotlib.pyplot as plt

# import data
disease = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/MultipleDiseasePrediction.csv')

# view data
disease.head()

# info of data
disease.info('info')

# summary statistics
disease.describe()

# check for missing value
disease.isna().sum()

# check for categories
disease.nunique()

# correlation
disease.corr()

# column names
disease.columns

# define y
y = disease['prognosis']

# define x
x = disease.drop('prognosis', axis=1)

# train test split
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, train_size=0.7, random_state=2529)

# verify shape
x_train.shape, x_test.shape, y_train.shape, y_test.shape

# select model
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier()

# train model
model.fit(x_train,y_train)

# predict with model
y_pred=model.predict(x_test)

"""## model evaluation"""

# model accuracy
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

accuracy_score(y_test,y_pred)

# model confusion matrix
confusion_matrix(y_test,y_pred)

# model classification report
print(classification_report(y_test,y_pred))

# future prediction
sample=disease.sample()
sample

# define X_new
x_new=sample.loc[:,x.columns]
x_new

# predict for X_new
model.predict(x_new)